FROM quay.io/fedora/fedora:43 as build-env

RUN dnf install -y go nodejs glibc-static git && dnf clean all


ARG GOPROXY
ENV GOPROXY=${GOPROXY:-https://proxy.golang.org,direct}
ARG GOPATH
ENV GOPATH="/home/go/"

ARG RELEASE_VERSION

ARG TAGS="sqlite sqlite_unlock_notify"
ENV TAGS="bindata timetzdata $TAGS"
ARG CGO_EXTRA_CFLAGS

ENV CGO_ENABLED=1

RUN mkdir -p ${GOPATH}src/forgejo.org

RUN git clone --depth 1 --branch staging https://codeberg.org/fedora/forgejo.git ${GOPATH}src/forgejo.org
WORKDIR ${GOPATH}/src/forgejo.org

COPY VERSION .

RUN make clean-no-bindata
RUN make frontend
RUN go build contrib/environment-to-ini/environment-to-ini.go
RUN make FORGEJO_GENERATE_SKIP_HASH=true RELEASE_VERSION=$RELEASE_VERSION go-check generate-backend static-executable

# Copy local files
RUN cp -r docker/rootless /tmp/local


# Set permissions
RUN chmod 755 /tmp/local/usr/local/bin/docker-entrypoint.sh \
              /tmp/local/usr/local/bin/docker-setup.sh \
              /tmp/local/usr/local/bin/gitea \
              /${GOPATH}src/forgejo.org/gitea \
              /${GOPATH}src/forgejo.org/environment-to-ini
RUN chmod 644 /${GOPATH}src/forgejo.org/contrib/autocompletion/bash_autocomplete

FROM quay.io/fedora/fedora:42

LABEL maintainer="codeberg@fedoraproject.org" \
      org.opencontainers.image.authors="Forgejo on Fedora" \
      org.opencontainers.image.url="https://forgejo.fedoraproject.org" \
      org.opencontainers.image.documentation="https://codeberg.org/fedora/oci-image-definitions" \
      org.opencontainers.image.source="https://codeberg.org/fedora/oci-image-definitions" \
      org.opencontainers.image.version="${RELEASE_VERSION}" \
      org.opencontainers.image.vendor="Forgejo" \
      org.opencontainers.image.licenses="GPL-3.0-or-later" \
      org.opencontainers.image.title="Forgejo. Beyond coding. We forge." \
      org.opencontainers.image.description="Forgejo for distgit"

EXPOSE 2222 3000

RUN dnf install -y \
    bash \
    ca-certificates \
    dumb-init \
    gettext \
    git \
    curl \
    gnupg \
    awk \
    nmap-ncat

RUN groupadd \
    -r -g 1000 \
    git && \
  useradd \
    -r -M \
    -d /var/lib/gitea/git \
    -s /bin/bash \
    -u 1000 \
    -g git \
    git

RUN mkdir -p /var/lib/gitea /etc/gitea /usr/sbin /data/git
RUN chown git:git /var/lib/gitea /etc/gitea /usr/sbin /data/git

COPY --from=build-env /tmp/local /
RUN cd /usr/local/bin ; ln -s gitea forgejo
COPY --from=build-env --chown=root:root /home/go/src/forgejo.org/gitea /app/gitea/gitea
RUN ln -s /app/gitea/gitea /app/gitea/forgejo-cli
COPY --from=build-env --chown=root:root /home/go/src/forgejo.org/environment-to-ini /usr/local/bin/environment-to-ini
COPY --from=build-env /home/go/src/forgejo.org/contrib/autocompletion/bash_autocomplete /etc/profile.d/gitea_bash_autocomplete.sh

#git:git
USER 1000:1000
ENV GITEA_WORK_DIR=/var/lib/gitea
ENV GITEA_CUSTOM=/var/lib/gitea/custom
ENV GITEA_TEMP=/tmp/gitea
ENV TMPDIR=/tmp/gitea

# Legacy config file for backwards compatibility
# TODO: remove on next major version release
ENV GITEA_APP_INI_LEGACY=/etc/gitea/app.ini

ENV GITEA_APP_INI=${GITEA_CUSTOM}/conf/app.ini
ENV HOME="/var/lib/gitea/git"
VOLUME ["/var/lib/gitea", "/etc/gitea"]
WORKDIR /var/lib/gitea

ENTRYPOINT ["/usr/bin/dumb-init", "--", "/usr/local/bin/docker-entrypoint.sh"]
CMD []

